{"version":3,"sources":["tweet-card/styles.module.css","tweet-card/Twemoji.js","tweet-card/utils/utils.js","tweet-card/HoverAvatar.js","tweet-card/ImagePreview.js","tweet-card/Tweet.js","pages/TweetLoader.js","pages/CustomTweetLoader.js","TweetRouter.js","App.js","index.js","tweet-card/imageStyle.module.css"],"names":["module","exports","Twemoji","props","noWrapper","childrenRefs","rootRef","React","createRef","this","i","node","current","twemoji","parse","options","prevProps","isEqual","_parseTwemoji","children","tag","other","Children","map","c","cloneElement","ref","createElement","Component","styleNumber","num","div","toFixed","replace","defaultProps","verifiedIcon","className","styles","icon","viewBox","aria-label","d","StyledAvatar","styled","Avatar","theme","transition","transform","boxShadow","UserProfile","isHovered","otherProps","Box","width","position","top","left","backgroundColor","palette","background","paper","borderRadius","shape","shadows","display","zIndex","padding","spacing","maxWidth","textAlign","HoverAvatar","src","alt","userName","userHandle","userBio","followers","following","verified","headline","useState","setIsHovered","profileRef","useRef","profileWidth","setProfileWidth","useEffect","offsetWidth","style","onMouseEnter","onMouseLeave","sx","height","link","Typography","variant","marginY","text","processedWords","split","word","startsWith","convertToBlue","ImagePreview","imageUrls","isOpen","setIsOpen","currentImage","setCurrentImage","gridClass","length","single","double","triple","quad","url","index","key","onClick","openLightbox","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","lockIcon","CommentAction","comment_count","cs","blue","alignItems","marginRight","RetweetAction","retweet_count","green","FavoriteAction","favorite_count","red","shareAction","BookmarkAction","bookmark_count","Tweet","config","rest","setText","processString","regex","fn","result","mention","target","rel","date","includes","dateAppDetails","dayjs","format","views","filter","Boolean","tweet","user","avatar","name","nickname","bio","locked","txt","Fragment","comments","retweets","likes","bookmarks","TweetLoader","useSearchParams","searchParams","setName","screenName","setScreenName","profileImageUrl","setProfileImageUrl","follower","setFollower","setFollowing","setVerified","setHeadline","commentCount","setCommentCount","retweetCount","setRetweetCount","favoriteCount","setFavoriteCount","viewCount","setViewCount","bookmark","setBookmark","setImageUrls","setDate","warnings","setWarnings","localWarnings","forEach","param","has","get","push","parseInt","Stack","marginBottom","warning","Alert","severity","app","Date","CustomTweetLoader","imageUrlsInput","setImageUrlsInput","Grid","container","marginTop","item","xs","md","component","noValidate","autoComplete","onSubmit","event","preventDefault","newImageUrls","trim","console","log","m","TextField","label","value","onChange","e","fullWidth","margin","type","Switch","checked","multiline","helperText","rows","Button","color","justifyContent","TweetRouter","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc76aac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweet\":\"styles_tweet__2xkwg\",\"user-info-right\":\"styles_user-info-right__3b2vr\",\"user-name\":\"styles_user-name__1f9gM\",\"user-name-txt\":\"styles_user-name-txt__2JlgI\",\"user-nickname\":\"styles_user-nickname__2TN1A\",\"icon\":\"styles_icon__ZyjSJ\",\"verified-icon-svg\":\"styles_verified-icon-svg__svSp1\",\"tweet-text\":\"styles_tweet-text__3dMkY\",\"txt\":\"styles_txt__2n3X3\",\"date-app-details\":\"styles_date-app-details__1u1rs\",\"rt-likes\":\"styles_rt-likes__1XJzX\",\"num-likes\":\"styles_num-likes__28Ia_\",\"bottom-info\":\"styles_bottom-info__2MTZl\",\"app\":\"styles_app__3L8b_\",\"mention\":\"styles_mention__3sSfJ\",\"hashtag\":\"styles_hashtag__1aVQ3\",\"link\":\"styles_link__Tqo8l\",\"avatar-container\":\"styles_avatar-container__132zf\",\"avatar\":\"styles_avatar__3N-D3\",\"drop-button\":\"styles_drop-button__2SaBD\",\"bottom-buttons\":\"styles_bottom-buttons__t544-\",\"bottom-button\":\"styles_bottom-button__1-oij\",\"blue\":\"styles_blue__3JE-t\",\"green\":\"styles_green__1EzsV\",\"red\":\"styles_red__2mjEg\",\"image-container\":\"styles_image-container__27aH6\",\"twemoji-sm\":\"styles_twemoji-sm__1sKBf\",\"twemoji-bg\":\"styles_twemoji-bg__VxMZt\",\"lightsout\":\"styles_lightsout__2tU9D\",\"lock-icon-svg\":\"styles_lock-icon-svg__1D8Xf\",\"dim\":\"styles_dim__1KX2W\",\"profile-info\":\"styles_profile-info__1-7LZ\",\"blue-text\":\"styles_blue-text__3N1oN\"};","import React from 'react'\nimport isEqual from 'lodash.isequal'\nimport PropTypes from 'prop-types'\nimport twemoji from 'twemoji'\n\nexport default class Twemoji extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    noWrapper: PropTypes.bool,\n    options: PropTypes.object,\n    tag: PropTypes.string\n  }\n\n  static defaultProps = {\n    tag: 'div'\n  }\n\n  constructor(props) {\n    super(props)\n    if (props.noWrapper) {\n      this.childrenRefs = {}\n    } else {\n      this.rootRef = React.createRef()\n    }\n  }\n\n  _parseTwemoji() {\n    const { noWrapper } = this.props\n    if (noWrapper) {\n      for (const i in this.childrenRefs) {\n        const node = this.childrenRefs[i].current\n        twemoji.parse(node, this.props.options)\n      }\n    } else {\n      const node = this.rootRef.current\n      twemoji.parse(node, this.props.options)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(this.props, prevProps)) {\n      this._parseTwemoji()\n    }\n  }\n\n  componentDidMount() {\n    this._parseTwemoji()\n  }\n\n  render() {\n    const { children, noWrapper, tag, ...other } = this.props\n    if (noWrapper) {\n      return (\n        <>\n          {React.Children.map(children, (c, i) => {\n            if (typeof c === 'string') {\n              return c\n            }\n            this.childrenRefs[i] = this.childrenRefs[i] || React.createRef()\n            return React.cloneElement(c, { ref: this.childrenRefs[i] })\n          })}\n        </>\n      )\n    } else {\n      delete other.options\n      return React.createElement(tag, { ref: this.rootRef, ...other }, children)\n    }\n  }\n}\n","import React from 'react';\nimport styles from '../styles.module.css'\n\nexport function styleNumber(num) {\n    let div = num / 1000000\n    if (div >= 1) {\n      return (\n        div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + 'M'\n      )\n    }\n    div = num / 1000\n    if (div >= 1) {\n      return (\n        div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + 'K'\n      )\n    }\n    return num\n}\n\n\n\nexport function convertToBlue(text){\n    // Split the text by space to get individual words\n    const words = text.split(/\\s/);\n    \n    // Map through the words and wrap hashtags and mentions in a span with the blue-text class\n    const processedWords = words.map(word => {\n      if (word.startsWith('#') || word.startsWith('@')) {\n        return <span className={styles[\"blue-text\"]}>{word} </span>;\n      }\n      return word + ' ';\n    });\n    \n    // Return the processed text\n    return <>{processedWords}</>;\n  };\n  ","import React, { useRef, useState, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Twemoji from './Twemoji';\nimport styles from './styles.module.css'\nimport { styleNumber, convertToBlue } from './utils/utils'\n\n\nconst verifiedIcon = (\n    <div className={styles.icon}>\n        <svg\n            viewBox='0 0 24 24'\n            aria-label='Verified account'\n            className={styles['verified-icon-svg']}\n        >\n            <g>\n                <path d='M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z' />\n            </g>\n        </svg>\n    </div>\n)\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n    transition: '0.3s ease-in-out',\n    '&:hover': {\n        transform: 'scale(1.05)',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.2)',\n    },\n}));\n\nconst UserProfile = styled(({ isHovered, ...otherProps }) => <Box {...otherProps} />)(({ theme, isHovered, width }) => ({\n    position: 'absolute',\n    top: '100%', // Position the profile below the avatar\n    left: '0%',\n    transform: `translateX(-${width / 2}px) translateY(10px)`, // Center based on dynamic width\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[3],\n    display: isHovered ? 'block' : 'none', // Show the box based on the hover state\n    zIndex: 2, // Ensure it's above other items\n    padding: theme.spacing(2),\n    width: 'max-content', // Width should expand with content\n    maxWidth: '300px', // Set a maximum width for the tooltip\n    textAlign: 'left', // Align text to the left\n  }));\n// Usage in the component remains the same\n\n\nconst HoverAvatar = ({ src, alt, userName, userHandle, userBio, followers, following, verified, headline }) => {\n    // State to handle hover effect\n    const [isHovered, setIsHovered] = useState(false);\n    const profileRef = useRef(null);\n    const [profileWidth, setProfileWidth] = useState(0);\n  \n\n    useEffect(() => {\n        if (profileRef.current) {\n          setProfileWidth(profileRef.current.offsetWidth);\n        }\n    }, [isHovered]); // Dependence on isHovered to recalculate when the tooltip is visible\n    \n\n    return (\n        <div\n            style={{ position: 'relative' }}\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <StyledAvatar\n                src={src}\n                alt={alt}\n                sx={{ width: 56, height: 56 }}\n            />\n      {isHovered && (\n        <UserProfile ref={profileRef} isHovered={isHovered} width={profileWidth}>\n                    <StyledAvatar\n                        src={src}\n                        alt={alt}\n                        sx={{ width: 56, height: 56 }}\n                    />\n                    <div className={styles['user-info-right']}>\n\n                        <div className={styles['user-name']}>\n                            <Twemoji\n                                options={{ className: styles['twemoji-sm'] }}\n                                className={styles['user-name-txt']}\n                            >\n                                <span className={styles.link}>{userName}</span>\n                            </Twemoji>\n\n                            {verified && verifiedIcon}\n                        </div>\n                        <div className={styles['user-nickname']}>@{userHandle}</div>\n\n                    </div>\n                    {/* User bio */}\n                    {userBio && (\n                        <Typography variant=\"body2\" sx={{ marginY: 1 }}>\n                            {userBio}\n                        </Typography>\n                    )}\n                    <p/>\n                    {convertToBlue(headline)}\n                    \n                    <p/>\n\n\n                    <span className={styles['profile-info']}>\n                        <strong>{styleNumber(following)}</strong> Following • \n                        <strong>{styleNumber(followers)}</strong> Followers\n                    </span>                    \n                </UserProfile>\n            )}\n\n        </div>\n    );\n};\n\nexport default HoverAvatar;\n","import React, { useState } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // Default styles\nimport styles from './imageStyle.module.css'; // Update with the actual path to your stylesheet\n\nconst ImagePreview = ({ imageUrls }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  let gridClass = '';\n\n  switch (imageUrls.length) {\n    case 1:\n      gridClass = styles.single;\n      break;\n    case 2:\n      gridClass = styles.double;\n      break;\n    case 3:\n      gridClass = styles.triple;\n      break;\n    case 4:\n      gridClass = styles.quad;\n      break;\n    default:\n      gridClass = styles.single;\n      break; // Handle default case or throw an error\n  }\n\n  const openLightbox = (index) => {\n    setCurrentImage(index);\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <div className={`${styles['image-grid-container']} ${gridClass}`}>\n        {imageUrls.map((url, index) => (\n          <img\n            key={index}\n            src={url}\n            alt={`Content ${index + 1}`}\n            onClick={() => openLightbox(index)}\n            className={styles['image-preview']} // You might want to define some styles for this class\n          />\n        ))}\n      </div>\n\n      {isOpen && (\n        <Lightbox\n          mainSrc={imageUrls[currentImage]}\n          nextSrc={imageUrls[(currentImage + 1) % imageUrls.length]}\n          prevSrc={imageUrls[(currentImage + imageUrls.length - 1) % imageUrls.length]}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setCurrentImage((currentImage + imageUrls.length - 1) % imageUrls.length)\n          }\n          onMoveNextRequest={() =>\n            setCurrentImage((currentImage + 1) % imageUrls.length)\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default ImagePreview;\n","import React, { useState, useEffect } from 'react'\nimport processString from 'react-process-string'\nimport dayjs from 'dayjs'\nimport cs from 'classnames'\n\nimport styles from './styles.module.css'\nimport HoverAvatar from './HoverAvatar'; \nimport { styleNumber } from './utils/utils'\nimport ImagePreview from './ImagePreview'\n\n\nfunction renderDate(date) {\n  return dayjs(date).format('h:mm A · MMMM D, YYYY')\n}\n\nconst verifiedIcon = (\n  <div className={styles.icon}>\n    <svg\n      viewBox='0 0 24 24'\n      aria-label='Verified account'\n      className={styles['verified-icon-svg']}\n    >\n      <g>\n        <path d='M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z' />\n      </g>\n    </svg>\n  </div>\n)\n\nconst lockIcon = (\n  <div className={styles.icon}>\n    <svg\n      viewBox='0 0 24 24'\n      aria-label='Locked account'\n      className={styles['lock-icon-svg']}\n    >\n      <g>\n        <path d='M19.75 7.31h-1.88c-.19-3.08-2.746-5.526-5.87-5.526S6.32 4.232 6.13 7.31H4.25C3.01 7.31 2 8.317 2 9.56v10.23c0 1.24 1.01 2.25 2.25 2.25h15.5c1.24 0 2.25-1.01 2.25-2.25V9.56c0-1.242-1.01-2.25-2.25-2.25zm-7 8.377v1.396c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-1.396c-.764-.3-1.307-1.04-1.307-1.91 0-1.137.92-2.058 2.057-2.058 1.136 0 2.057.92 2.057 2.056 0 .87-.543 1.61-1.307 1.91zM7.648 7.31C7.838 5.06 9.705 3.284 12 3.284s4.163 1.777 4.352 4.023H7.648z' />\n      </g>\n    </svg>\n  </div>\n)\n\nconst CommentAction = ({ comment_count }) => (\n  <div className={cs(styles['bottom-button'], styles.blue)}>\n    <div style={{ display: 'flex', alignItems: 'center' }}> {/* This ensures flex layout */}\n      <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}> {/* Add some margin to the right of the SVG */}\n        <g>\n          <path d=\"M1.751 10c0-4.42 3.584-8 8.005-8h4.366c4.49 0 8.129 3.64 8.129 8.13 0 2.96-1.607 5.68-4.196 7.11l-8.054 4.46v-3.69h-.067c-4.49.1-8.183-3.51-8.183-8.01zm8.005-6c-3.317 0-6.005 2.69-6.005 6 0 3.37 2.77 6.08 6.138 6.01l.351-.01h1.761v2.3l5.087-2.81c1.951-1.08 3.163-3.13 3.163-5.36 0-3.39-2.744-6.13-6.129-6.13H9.756z\" />\n        </g>\n      </svg>\n      <span className={cs(styles['bottom-info'])}>\n        {styleNumber(comment_count)}\n      </span>\n    </div>\n  </div>\n);\n\nconst RetweetAction = ({ retweet_count }) => (\n  <div className={cs(styles['bottom-button'], styles.green)}>\n    <div style={{ display: 'flex', alignItems: 'center' }}> {/* This ensures flex layout */}\n      <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}> {/* Add some margin to the right of the SVG */}\n        <g>\n          <path d=\"M4.5 3.88l4.432 4.14-1.364 1.46L5.5 7.55V16c0 1.1.896 2 2 2H13v2H7.5c-2.209 0-4-1.79-4-4V7.55L1.432 9.48.068 8.02 4.5 3.88zM16.5 6H11V4h5.5c2.209 0 4 1.79 4 4v8.45l2.068-1.93 1.364 1.46-4.432 4.14-4.432-4.14 1.364-1.46 2.068 1.93V8c0-1.1-.896-2-2-2z\" />\n        </g>\n      </svg>\n      <span className={cs(styles['bottom-info'])}>\n        {styleNumber(retweet_count)}\n      </span>\n    </div>\n  </div>\n);\n\nconst FavoriteAction = ({ favorite_count }) => (\n  <div className={cs(styles['bottom-button'], styles.red)}>\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}>\n        <g>\n          <path d=\"M16.697 5.5c-1.222-.06-2.679.51-3.89 2.16l-.805 1.09-.806-1.09C9.984 6.01 8.526 5.44 7.304 5.5c-1.243.07-2.349.78-2.91 1.91-.552 1.12-.633 2.78.479 4.82 1.074 1.97 3.257 4.27 7.129 6.61 3.87-2.34 6.052-4.64 7.126-6.61 1.111-2.04 1.03-3.7.477-4.82-.561-1.13-1.666-1.84-2.908-1.91zm4.187 7.69c-1.351 2.48-4.001 5.12-8.379 7.67l-.503.3-.504-.3c-4.379-2.55-7.029-5.19-8.382-7.67-1.36-2.5-1.41-4.86-.514-6.67.887-1.79 2.647-2.91 4.601-3.01 1.651-.09 3.368.56 4.798 2.01 1.429-1.45 3.146-2.1 4.796-2.01 1.954.1 3.714 1.22 4.601 3.01.896 1.81.846 4.17-.514 6.67z\" />\n        </g>\n      </svg>\n      <span className={cs(styles['bottom-info'])}>\n        {styleNumber(favorite_count)}\n      </span>\n    </div>\n  </div>\n);\n\nconst shareAction = (\n  <div className={cs(styles['bottom-button'], styles.blue)}>\n    <div>\n      <svg viewBox='0 0 24 24'>\n        <g>\n          <path d=\"M12 2.59l5.7 5.7-1.41 1.42L13 6.41V16h-2V6.41l-3.3 3.3-1.41-1.42L12 2.59zM21 15l-.02 3.51c0 1.38-1.12 2.49-2.5 2.49H5.5C4.11 21 3 19.88 3 18.5V15h2v3.5c0 .28.22.5.5.5h12.98c.28 0 .5-.22.5-.5L19 15h2z\" />\n        </g>\n      </svg>\n    </div>\n  </div>\n)\n\n\n\nconst BookmarkAction = ({ bookmark_count }) => (\n  <div className={cs(styles['bottom-button'], styles.blue)}>\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}>\n        <g>\n          <path d=\"M4 4.5C4 3.12 5.119 2 6.5 2h11C18.881 2 20 3.12 20 4.5v18.44l-8-5.71-8 5.71V4.5zM6.5 4c-.276 0-.5.22-.5.5v14.56l6-4.29 6 4.29V4.5c0-.28-.224-.5-.5-.5h-11z\" />\n        </g>\n      </svg>\n      <span className={cs(styles['bottom-info'])}>\n        {styleNumber(bookmark_count)}\n      </span>\n    </div>\n  </div>\n);\nexport function Tweet(props) {\n  const { config = {}, className, ...rest } = props\n  const [text, setText] = useState(config.text)\n\n  useEffect(() => {\n    setText(\n      processString([\n        {\n          regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:(?:@|＠)(?!\\/))([a-zA-Z0-9/_]{1,15})(?:\\b(?!@|＠)|$)/,\n          fn: (key, result) => {\n            return (\n              <span key={key}>\n                {' '}\n                <span className={cs(styles.link, styles.mention)}>\n                  @{result[1]}\n                </span>\n              </span>\n            )\n          }\n        },\n        {\n          regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n          fn: (key, result) => {\n            return (\n              <span key={key}>\n                {' '}\n                <span className={cs(styles.link, styles.mention)}>\n                  #{result[1]}\n                </span>\n              </span>\n            )\n          }\n        },\n        // {\n        //   regex: /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/,\n        //   fn: (key, result) => {\n        //     return (\n        //       <Twemoji\n        //         key={key}\n        //         options={{ className: styles['twemoji-bg'] }}\n        //         style={{ display: 'inline' }}\n        //       >\n        //         {result[1]}\n        //       </Twemoji>\n        //     )\n        //   }\n        // },\n        {\n          regex: /(\\bhttps?:\\/\\/\\S+\\b)/g,\n          fn: (key, result) => (\n            <span key={key}>\n              {' '}\n              <span  className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n                {result[0]}\n              </span>\n            </span>\n          )\n        },\n        {\n          regex: /(\\bhttp?:\\/\\/\\S+\\b)/g,\n          fn: (key, result) => (\n            <span key={key}>\n              {' '}\n              <span className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n                {result[0]}\n              </span>\n            </span>\n          )\n        }\n      ])(config.text)\n    )\n  }, [config.text])\n\n  const theme = ['default', 'dim', 'lightsout'].includes(config.theme)\n    ? config.theme\n    : 'default'\n\n  const dateAppDetails = [\n    config.date && renderDate(config.date),\n\n    (<span className={cs(styles.link, styles['rt-likes'])}>\n      <strong>{styleNumber(config.views)}</strong> Views\n    </span>)\n  ].filter(Boolean)\n\n  return (\n    <div className={cs(styles.tweet, styles[theme], className)} {...rest}>\n      <div className={styles['user-info']}>\n        <div className={styles['avatar-container']}>\n        <HoverAvatar\n          src={config.user.avatar}\n          alt={config.user.name}\n          userName={config.user.name}\n          userHandle={config.user.nickname}\n          userBio={config.user.bio}\n          followers={config.user.followers}\n          following={config.user.following}\n          verified={config.user.verified} \n          headline={config.user.headline}\n        />\n        </div>\n\n        <div className={styles['user-info-right']}>\n          {/* {dropButtonIcon} */}\n\n          <div className={styles['user-name']}>\n\n              <span className={styles.link}>{config.user.name}</span>\n\n            {config.user.verified && verifiedIcon}\n\n            {config.user.locked && !config.user.verified && lockIcon}\n          </div>\n\n          <div className={styles['user-nickname']}>@{config.user.nickname}</div>\n        </div>\n      </div>\n\n      <div className={styles['tweet-text']}>\n        {text && <div className={styles.txt}>{text}</div>}\n\n        {config.imageUrls && (\n            <ImagePreview imageUrls={config.imageUrls} />\n        )}\n\n        \n      </div>\n\n      {dateAppDetails && dateAppDetails.length && (\n        <div className={styles['date-app-details']}>\n          {dateAppDetails.map((d, i) => (\n            <React.Fragment key={i}>\n              {d}\n              {i < dateAppDetails.length - 1 && ' · '}\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n\n\n\n      <div className={styles['bottom-buttons']}>\n\n        <CommentAction comment_count={config.comments} />\n\n\n        <RetweetAction retweet_count={config.retweets} />\n\n\n        <FavoriteAction favorite_count={config.likes} />\n        <BookmarkAction bookmark_count={config.bookmarks} />\n\n        {shareAction}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Tweet } from './../tweet-card/Tweet';\n\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nfunction TweetLoader() {\n  let [searchParams] = useSearchParams();\n\n  // Initialize state variables for each tweet property\n  const [name, setName] = useState('');\n  const [screenName, setScreenName] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState('');\n  const [follower, setFollower] = useState(0);\n  const [following, setFollowing] = useState(0);\n  const [verified, setVerified] = useState(false);\n  const [headline, setHeadline] = useState('');\n  const [commentCount, setCommentCount] = useState(0);\n  const [retweetCount, setRetweetCount] = useState(0);\n  const [favoriteCount, setFavoriteCount] = useState(0);\n  const [text, setText] = useState('');\n  const [viewCount, setViewCount] = useState(0);\n  const [bookmark, setBookmark] = useState(0);\n  const [imageUrls, setImageUrls] = useState([]);\n  const [date, setDate] = useState(0);\n\n  const [warnings, setWarnings] = useState([]);\n\n  \n\n  useEffect(() => {\n\n    let localWarnings = [];\n\n    // Parameters that are expected\n    const expectedParams = ['name', 'handle', 'profileImageUrl', 'follower', 'following', 'verified', 'headline', 'commentCount', 'retweetCount', 'favoriteCount', 'text', 'viewCount', 'bookmark', 'imageUrls', 'date'];\n\n    // Check for each expected parameter\n    expectedParams.forEach(param => {\n      if (!searchParams.has(param) || searchParams.get(param) === '') {\n        localWarnings.push(`Missing parameter: ${param}`);\n      }\n    });\n\n    // Parse each query parameter and update state variables\n    setName(searchParams.get('name') || '');\n    setScreenName(searchParams.get('handle') || '');\n    setProfileImageUrl(searchParams.get('profileImageUrl') || '');\n    setFollower(parseInt(searchParams.get('follower') || 0, 10));\n    setFollowing(parseInt(searchParams.get('following') || 0, 10));\n    setVerified(searchParams.get('verified') === 'true');\n    setHeadline(searchParams.get('headline') || '');\n    setCommentCount(parseInt(searchParams.get('commentCount') || 0, 10));\n    setRetweetCount(parseInt(searchParams.get('retweetCount') || 0, 10));\n    setFavoriteCount(parseInt(searchParams.get('favoriteCount') || 0, 10));\n    setText(searchParams.get('text') || '');\n    setDate(searchParams.get('date') || '');\n    setViewCount(parseInt(searchParams.get('viewCount') || 0, 10));\n    setBookmark(parseInt(searchParams.get('bookmark') || 0, 10));\n    setImageUrls(searchParams.get('imageUrls') ? searchParams.get('imageUrls').split(',') : []);\n    setWarnings(localWarnings);\n\n\n}, [searchParams]);\n\n  return (\n    <>\n    <Stack sx={{ width: '100%', marginBottom: 2 }}>\n        {warnings.map((warning, index) => (\n          <Alert severity=\"warning\" key={index}>{warning}</Alert>\n        ))}\n      </Stack>\n    <Tweet\n      config={{\n        user: {\n          avatar: profileImageUrl,\n          nickname: screenName,\n          name: name,\n          verified: verified,\n          following: following,\n          followers: follower,\n          headline: headline\n        },\n        text: text,\n        app: 'Twitter Web App',\n        retweets: retweetCount,\n        likes: favoriteCount,\n        views: viewCount,\n        comments: commentCount,\n        bookmarks: bookmark,\n        imageUrls: imageUrls,\n        date: new Date(date),\n      }}\n    />\n    </>\n  );\n}\n\nexport default TweetLoader;\n","import React, { useState } from 'react';\nimport { Tweet } from './../tweet-card/Tweet';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Switch from '@mui/material/Switch';\n\nexport default function CustomTweetLoader() {\n    // Set up state for each property of the tweet\n    const [name, setName] = useState('Yakov 🚲🚃🚠🎗️');\n    const [screenName, setScreenName] = useState('transitive_bs');\n    const [profileImageUrl, setProfileImageUrl] = useState('https://pbs.twimg.com/profile_images/1754555939263287296/c4DY9fsD_400x400.jpg');\n    const [follower, setFollower] = useState(322);\n    const [following, setFollowing] = useState(534);\n    const [verified, setVerified] = useState(true);\n    const [headline, setHeadline] = useState(\"Working to end career retaliation against #survivors of sexual violence in Hollywood. Founded by #SilenceBreaker @sarahannmasse. #HireSurvivorsHollywood\");\n    const [commentCount, setCommentCount] = useState(300);\n    const [retweetCount, setRetweetCount] = useState(2517);\n    const [favoriteCount, setFavoriteCount] = useState(16342);\n    const [text, setText] = useState(\"Happy Sunday to the #HireSurvivorsHollywood Community! We've decided to use Sundays to highlight #survivors and #SilenceBreakers and the wonderful work they're doing!\\n\\nToday we're celebrating Amber Heard (#AmberHeard)! https://t.co/rCigkEijIY\");\n    const [viewCount, setViewCount] = useState(5000);\n    const [bookmark, setBookmark] = useState(67897);\n    const [date, setDate] = useState('2020-04-20T16:20:00-0400');\n    const [imageUrlsInput, setImageUrlsInput] = useState([\"https://pbs.twimg.com/media/GH3pdhKacAAQewr?format=jpg&name=medium\"]);\n    const [imageUrls, setImageUrls] = useState(\"https://pbs.twimg.com/media/GH3pdhKacAAQewr?format=jpg&name=medium\");\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newImageUrls = imageUrls.split('\\n').map(url => url.trim()).filter(url => url);\n        setImageUrlsInput(newImageUrls)\n\n        // Normally you would probably update the Tweet component's props with new state here\n        // However, for simplicity, we'll log the state to the console\n        console.log({\n            name,\n            screenName,\n            profileImageUrl,\n            follower,\n            following,\n            verified,\n            headline,\n            commentCount,\n            retweetCount,\n            favoriteCount,\n            text,\n            viewCount,\n            bookmark,\n            imageUrlsInput,\n        });\n    };\n\n    return (\n        <Grid container spacing={2} sx={{ marginTop: 2 }}>\n            {/* Input Form Column */}\n            <Grid item xs={12} md={6}>\n\n                <Box component=\"form\" noValidate autoComplete=\"off\" onSubmit={handleSubmit} sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}>\n                    <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Screen Name\" value={screenName} onChange={(e) => setScreenName(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Profile Image URL\" value={profileImageUrl} onChange={(e) => setProfileImageUrl(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Followers\" value={follower} onChange={(e) => setFollower(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Following\" value={following} onChange={(e) => setFollowing(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Verified\" value={verified} onChange={(e) => setVerified(e.target.value === 'true')} fullWidth margin=\"normal\" />\n                    <Switch\n                        checked={verified}\n                        onChange={(e) => setVerified(e.target.checked)}\n                        name=\"verified\"\n                    />\n                    <TextField label=\"date\" value={date} onChange={(e) => setDate(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Comment Count\" value={commentCount} onChange={(e) => setCommentCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Retweet Count\" value={retweetCount} onChange={(e) => setRetweetCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Favorite Count\" value={favoriteCount} onChange={(e) => setFavoriteCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Headline\" value={headline} onChange={(e) => setHeadline(e.target.value)} fullWidth margin=\"normal\" multiline />\n                    <TextField label=\"Tweet Text\" value={text} onChange={(e) => setText(e.target.value)} fullWidth margin=\"normal\" multiline />\n                    <TextField type=\"number\" label=\"View Count\" value={viewCount} onChange={(e) => setViewCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Bookmark\" value={bookmark} onChange={(e) => setBookmark(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField\n                        label=\"Image URLs\"\n                        value={imageUrls}\n                        onChange={(e) => setImageUrls(e.target.value)}\n                        fullWidth\n                        margin=\"normal\"\n                        helperText=\"Enter each URL on a new line.\"\n                        multiline\n                        rows={4}\n                    />\n\n                    <p />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Update Tweet\n                    </Button>\n                </Box>\n            </Grid>\n\n            {/* Tweet Card Column */}\n            <Grid item xs={12} md={6} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'start' }}>\n\n\n                {/* The Tweet component is rendered below with the state passed as props */}\n                <Tweet\n                    config={{\n                        user: {\n                            avatar: profileImageUrl,\n                            nickname: screenName,\n                            name: name,\n                            verified: verified,\n                            following: following,\n                            followers: follower,\n                            headline: headline\n                        },\n                        text: text,\n                        app: 'Twitter Web App',\n                        date: new Date(date), // Assuming you want to keep this static\n                        retweets: retweetCount,\n                        likes: favoriteCount,\n                        views: viewCount,\n                        comments: commentCount,\n                        bookmarks: bookmark,\n                        imageUrls: imageUrlsInput,\n                    }}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport TweetLoader from './pages/TweetLoader'; // Component for loading tweets based on query parameters\nimport CustomTweetLoader from './pages/CustomTweetLoader'; // Component for loading tweets based on user-defined info\n\nconst TweetRouter = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<TweetLoader />} />\n        <Route path=\"/custom\" element={<CustomTweetLoader />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default TweetRouter;\n","import React from 'react';\nimport TweetRouter from './TweetRouter';\n\nfunction App() {\n  return (\n    <div>\n      <TweetRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-grid-container\":\"imageStyle_image-grid-container__2C7Ro\",\"single\":\"imageStyle_single__3FOWN\",\"double\":\"imageStyle_double__28HGx\",\"triple\":\"imageStyle_triple__26ID8\",\"quad\":\"imageStyle_quad__3B4Za\"};"],"sourceRoot":""}