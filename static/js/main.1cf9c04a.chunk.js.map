{"version":3,"sources":["tweet-card/styles.module.css","tweet-card/utils/utils.js","tweet-card/HoverAvatar.js","tweet-card/ImagePreview.js","tweet-card/Tweet.js","pages/TweetLoader.js","pages/CustomTweetLoader.js","TweetRouter.js","App.js","index.js","tweet-card/imageStyle.module.css"],"names":["module","exports","styleNumber","num","div","toFixed","replace","verifiedIcon","className","styles","icon","viewBox","aria-label","d","StyledAvatar","styled","Avatar","theme","transition","transform","boxShadow","UserProfile","isHovered","otherProps","Box","width","position","top","left","backgroundColor","palette","background","paper","borderRadius","shape","shadows","display","zIndex","padding","spacing","maxWidth","textAlign","textOverflow","HoverAvatar","src","alt","userName","userHandle","userBio","followers","following","verified","headline","useState","setIsHovered","profileRef","useRef","profileWidth","setProfileWidth","useEffect","current","offsetWidth","style","onMouseEnter","onMouseLeave","sx","height","ref","link","Typography","variant","marginY","text","config","regex","fn","key","result","cs","mention","target","rel","processString","convertToBlue","ImagePreview","imageUrls","isOpen","setIsOpen","currentImage","setCurrentImage","gridClass","length","single","double","triple","quad","map","url","index","onClick","openLightbox","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","lockIcon","CommentAction","comment_count","Tooltip","title","slotProps","popper","modifiers","name","options","offset","blue","alignItems","marginRight","RetweetAction","retweet_count","green","FavoriteAction","favorite_count","red","shareAction","BookmarkAction","bookmark_count","Tweet","props","rest","setText","date","includes","dateAppDetails","dayjs","format","views","filter","Boolean","tweet","user","avatar","nickname","bio","locked","txt","i","Fragment","comments","retweets","likes","bookmarks","TweetLoader","useSearchParams","searchParams","setName","screenName","setScreenName","profileImageUrl","setProfileImageUrl","follower","setFollower","setFollowing","setVerified","setHeadline","commentCount","setCommentCount","retweetCount","setRetweetCount","favoriteCount","setFavoriteCount","viewCount","setViewCount","bookmark","setBookmark","setImageUrls","setDate","warnings","setWarnings","localWarnings","forEach","param","has","get","push","parseInt","split","Stack","marginBottom","warning","Alert","severity","app","Date","CustomTweetLoader","imageUrlsInput","setImageUrlsInput","Grid","container","marginTop","item","xs","md","component","noValidate","autoComplete","onSubmit","event","preventDefault","newImageUrls","trim","console","log","m","TextField","label","value","onChange","e","fullWidth","margin","type","Switch","checked","multiline","helperText","rows","Button","color","justifyContent","TweetRouter","basename","process","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cf9c04a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweet\":\"styles_tweet__2xkwg\",\"user-info-right\":\"styles_user-info-right__3b2vr\",\"user-name\":\"styles_user-name__1f9gM\",\"user-name-txt\":\"styles_user-name-txt__2JlgI\",\"user-nickname\":\"styles_user-nickname__2TN1A\",\"icon\":\"styles_icon__ZyjSJ\",\"verified-icon-svg\":\"styles_verified-icon-svg__svSp1\",\"tweet-text\":\"styles_tweet-text__3dMkY\",\"txt\":\"styles_txt__2n3X3\",\"date-app-details\":\"styles_date-app-details__1u1rs\",\"rt-likes\":\"styles_rt-likes__1XJzX\",\"num-likes\":\"styles_num-likes__28Ia_\",\"bottom-info\":\"styles_bottom-info__2MTZl\",\"app\":\"styles_app__3L8b_\",\"mention\":\"styles_mention__3sSfJ\",\"hashtag\":\"styles_hashtag__1aVQ3\",\"link\":\"styles_link__Tqo8l\",\"avatar-container\":\"styles_avatar-container__132zf\",\"avatar\":\"styles_avatar__3N-D3\",\"drop-button\":\"styles_drop-button__2SaBD\",\"bottom-buttons\":\"styles_bottom-buttons__t544-\",\"bottom-button\":\"styles_bottom-button__1-oij\",\"blue\":\"styles_blue__3JE-t\",\"green\":\"styles_green__1EzsV\",\"red\":\"styles_red__2mjEg\",\"image-container\":\"styles_image-container__27aH6\",\"twemoji-sm\":\"styles_twemoji-sm__1sKBf\",\"twemoji-bg\":\"styles_twemoji-bg__VxMZt\",\"lightsout\":\"styles_lightsout__2tU9D\",\"lock-icon-svg\":\"styles_lock-icon-svg__1D8Xf\",\"dim\":\"styles_dim__1KX2W\",\"profile-info\":\"styles_profile-info__1-7LZ\",\"blue-text\":\"styles_blue-text__3N1oN\"};","import React from 'react';\nimport styles from '../styles.module.css'\nimport processString from 'react-process-string';\nimport cs from 'classnames'\n\nexport function styleNumber(num) {\n    let div = num / 1000000\n    if (div >= 1) {\n      return (\n        div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + 'M'\n      )\n    }\n    div = num / 1000\n    if (div >= 1) {\n      return (\n        div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + 'K'\n      )\n    }\n    return num\n}\n\nexport function convertToBlue(text) {\n\n  // Define the array of processors\n  const config = [\n    {\n      regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:(?:@|＠)(?!\\/))([a-zA-Z0-9/_]{1,15})(?:\\b(?!@|＠)|$)/,\n      fn: (key, result) => (\n        <span key={key}>\n          {' '}\n          <span className={cs(styles.link, styles.mention)}>\n            @{result[1]}\n          </span>\n        </span>\n      )\n    },\n    {\n      regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n      fn: (key, result) => (\n        <span key={key}>\n          {' '}\n          <span className={cs(styles.link, styles.mention)}>\n            #{result[1]}\n          </span>\n        </span>\n      )\n    },\n    {\n      regex: /(\\bhttps?:\\/\\/\\S+\\b)/g,\n      fn: (key, result) => (\n        <span key={key}>\n          {' '}\n          <span className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n            {result[0]}\n          </span>\n        </span>\n      )\n    },\n    {\n      regex: /(\\bhttp?:\\/\\/\\S+\\b)/g,\n      fn: (key, result) => (\n        <span key={key}>\n          {' '}\n          <span className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n            {result[0]}\n          </span>\n        </span>\n      )\n    }\n  ];\n\n  // Use processString to format the text based on the config\n  return processString(config)(text);\n}","import React, { useRef, useState, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport styles from './styles.module.css'\nimport { styleNumber, convertToBlue } from './utils/utils'\n\n\nconst verifiedIcon = (\n    <div className={styles.icon}>\n        <svg\n            viewBox='0 0 24 24'\n            aria-label='Verified account'\n            className={styles['verified-icon-svg']}\n        >\n            <g>\n                <path d='M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z' />\n            </g>\n        </svg>\n    </div>\n)\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n    transition: '0.3s ease-in-out',\n    '&:hover': {\n        transform: 'scale(1.05)',\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.2)',\n    },\n}));\n\nconst UserProfile = styled(({ isHovered, ...otherProps }) => <Box {...otherProps} />)(({ theme, isHovered, width }) => ({\n    position: 'absolute',\n    top: '100%', // Position the profile below the avatar\n    left: '0%',\n    transform: `translateX(-${width / 2}px) translateY(10px)`, // Center based on dynamic width\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[3],\n    display: isHovered ? 'block' : 'none', // Show the box based on the hover state\n    zIndex: 2, // Ensure it's above other items\n    padding: theme.spacing(2),\n    width: 'max-content', // Width should expand with content\n    maxWidth: '300px', // Set a maximum width for the tooltip\n    textAlign: 'left', // Align text to the left\n    textOverflow: 'ellipsis',\n  }));\n// Usage in the component remains the same\n\n\nconst HoverAvatar = ({ src, alt, userName, userHandle, userBio, followers, following, verified, headline }) => {\n    // State to handle hover effect\n    const [isHovered, setIsHovered] = useState(false);\n    const profileRef = useRef(null);\n    const [profileWidth, setProfileWidth] = useState(0);\n  \n\n    useEffect(() => {\n        if (profileRef.current) {\n          setProfileWidth(profileRef.current.offsetWidth);\n        }\n    }, [isHovered]); // Dependence on isHovered to recalculate when the tooltip is visible\n    \n\n    return (\n        <div\n            style={{ position: 'relative' }}\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <StyledAvatar\n                src={src}\n                alt={alt}\n                sx={{ width: 56, height: 56 }}\n            />\n      {isHovered && (\n        <UserProfile ref={profileRef} isHovered={isHovered} width={profileWidth}>\n                    <StyledAvatar\n                        src={src}\n                        alt={alt}\n                        sx={{ width: 56, height: 56 }}\n                    />\n                    <div className={styles['user-info-right']}>\n\n                        <div className={styles['user-name']}>\n                         \n                            <span className={styles.link}>{userName}</span>\n\n                            {verified && verifiedIcon}\n                        </div>\n                        <div className={styles['user-nickname']}>@{userHandle}</div>\n\n                    </div>\n                    {/* User bio */}\n                    {userBio && (\n                        <Typography variant=\"body2\" sx={{ marginY: 1 }}>\n                            {userBio}\n                        </Typography>\n                    )}\n                    <p/>\n                    {convertToBlue(headline)}\n                    \n                    <p/>\n\n\n                    <span className={styles['profile-info']}>\n                        <strong>{styleNumber(following)}</strong> Following • \n                        <strong>{styleNumber(followers)}</strong> Followers\n                    </span>                    \n                </UserProfile>\n            )}\n\n        </div>\n    );\n};\n\nexport default HoverAvatar;\n","import React, { useState } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // Default styles\nimport styles from './imageStyle.module.css'; // Update with the actual path to your stylesheet\n\nconst ImagePreview = ({ imageUrls }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  let gridClass = '';\n\n  switch (imageUrls.length) {\n    case 1:\n      gridClass = styles.single;\n      break;\n    case 2:\n      gridClass = styles.double;\n      break;\n    case 3:\n      gridClass = styles.triple;\n      break;\n    case 4:\n      gridClass = styles.quad;\n      break;\n    default:\n      gridClass = styles.single;\n      break; // Handle default case or throw an error\n  }\n\n  const openLightbox = (index) => {\n    setCurrentImage(index);\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <div className={`${styles['image-grid-container']} ${gridClass}`}>\n        {imageUrls.map((url, index) => (\n          <img\n            key={index}\n            src={url}\n            alt={`Content ${index + 1}`}\n            onClick={() => openLightbox(index)}\n            className={styles['image-preview']} // You might want to define some styles for this class\n          />\n        ))}\n      </div>\n\n      {isOpen && (\n        <Lightbox\n          mainSrc={imageUrls[currentImage]}\n          nextSrc={imageUrls[(currentImage + 1) % imageUrls.length]}\n          prevSrc={imageUrls[(currentImage + imageUrls.length - 1) % imageUrls.length]}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setCurrentImage((currentImage + imageUrls.length - 1) % imageUrls.length)\n          }\n          onMoveNextRequest={() =>\n            setCurrentImage((currentImage + 1) % imageUrls.length)\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default ImagePreview;\n","import React, { useState, useEffect } from 'react'\nimport processString from 'react-process-string'\nimport dayjs from 'dayjs'\nimport cs from 'classnames'\nimport { Tooltip } from '@mui/material';\n\nimport styles from './styles.module.css'\nimport HoverAvatar from './HoverAvatar';\nimport { styleNumber } from './utils/utils'\nimport ImagePreview from './ImagePreview'\n\n\nfunction renderDate(date) {\n  return dayjs(date).format('h:mm A · MMMM D, YYYY')\n}\n\nconst verifiedIcon = (\n  <div className={styles.icon}>\n    <svg\n      viewBox='0 0 24 24'\n      aria-label='Verified account'\n      className={styles['verified-icon-svg']}\n    >\n      <g>\n        <path d='M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z' />\n      </g>\n    </svg>\n  </div>\n)\n\nconst lockIcon = (\n  <div className={styles.icon}>\n    <svg\n      viewBox='0 0 24 24'\n      aria-label='Locked account'\n      className={styles['lock-icon-svg']}\n    >\n      <g>\n        <path d='M19.75 7.31h-1.88c-.19-3.08-2.746-5.526-5.87-5.526S6.32 4.232 6.13 7.31H4.25C3.01 7.31 2 8.317 2 9.56v10.23c0 1.24 1.01 2.25 2.25 2.25h15.5c1.24 0 2.25-1.01 2.25-2.25V9.56c0-1.242-1.01-2.25-2.25-2.25zm-7 8.377v1.396c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-1.396c-.764-.3-1.307-1.04-1.307-1.91 0-1.137.92-2.058 2.057-2.058 1.136 0 2.057.92 2.057 2.056 0 .87-.543 1.61-1.307 1.91zM7.648 7.31C7.838 5.06 9.705 3.284 12 3.284s4.163 1.777 4.352 4.023H7.648z' />\n      </g>\n    </svg>\n  </div>\n)\n\nconst CommentAction = ({ comment_count }) => (\n  <Tooltip title=\"Reply\" slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [-25, -14],\n          },\n        },\n      ],\n    },\n  }}>\n\n    <div className={cs(styles['bottom-button'], styles.blue)}>\n      <div style={{ display: 'flex', alignItems: 'center' }}> {/* This ensures flex layout */}\n\n        <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}> {/* Add some margin to the right of the SVG */}\n          <g>\n            <path d=\"M1.751 10c0-4.42 3.584-8 8.005-8h4.366c4.49 0 8.129 3.64 8.129 8.13 0 2.96-1.607 5.68-4.196 7.11l-8.054 4.46v-3.69h-.067c-4.49.1-8.183-3.51-8.183-8.01zm8.005-6c-3.317 0-6.005 2.69-6.005 6 0 3.37 2.77 6.08 6.138 6.01l.351-.01h1.761v2.3l5.087-2.81c1.951-1.08 3.163-3.13 3.163-5.36 0-3.39-2.744-6.13-6.129-6.13H9.756z\" />\n          </g>\n        </svg>\n        <span className={cs(styles['bottom-info'])}>\n          {styleNumber(comment_count)}\n        </span>\n\n      </div>\n    </div>\n  </Tooltip>\n\n);\n\nconst RetweetAction = ({ retweet_count }) => (\n  <Tooltip title=\"Repost\" slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [-20, -14],\n          },\n        },\n      ],\n    },\n  }}>\n    <div className={cs(styles['bottom-button'], styles.green)}>\n      <div style={{ display: 'flex', alignItems: 'center' }}> {/* This ensures flex layout */}\n        <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}> {/* Add some margin to the right of the SVG */}\n          <g>\n            <path d=\"M4.5 3.88l4.432 4.14-1.364 1.46L5.5 7.55V16c0 1.1.896 2 2 2H13v2H7.5c-2.209 0-4-1.79-4-4V7.55L1.432 9.48.068 8.02 4.5 3.88zM16.5 6H11V4h5.5c2.209 0 4 1.79 4 4v8.45l2.068-1.93 1.364 1.46-4.432 4.14-4.432-4.14 1.364-1.46 2.068 1.93V8c0-1.1-.896-2-2-2z\" />\n          </g>\n        </svg>\n        <span className={cs(styles['bottom-info'])}>\n          {styleNumber(retweet_count)}\n        </span>\n      </div>\n    </div>\n  </Tooltip>\n\n);\n\nconst FavoriteAction = ({ favorite_count }) => (\n  <Tooltip title=\"Like\" slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [-27, -14],\n          },\n        },\n      ],\n    },\n  }}>\n    <div className={cs(styles['bottom-button'], styles.red)}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}>\n          <g>\n            <path d=\"M16.697 5.5c-1.222-.06-2.679.51-3.89 2.16l-.805 1.09-.806-1.09C9.984 6.01 8.526 5.44 7.304 5.5c-1.243.07-2.349.78-2.91 1.91-.552 1.12-.633 2.78.479 4.82 1.074 1.97 3.257 4.27 7.129 6.61 3.87-2.34 6.052-4.64 7.126-6.61 1.111-2.04 1.03-3.7.477-4.82-.561-1.13-1.666-1.84-2.908-1.91zm4.187 7.69c-1.351 2.48-4.001 5.12-8.379 7.67l-.503.3-.504-.3c-4.379-2.55-7.029-5.19-8.382-7.67-1.36-2.5-1.41-4.86-.514-6.67.887-1.79 2.647-2.91 4.601-3.01 1.651-.09 3.368.56 4.798 2.01 1.429-1.45 3.146-2.1 4.796-2.01 1.954.1 3.714 1.22 4.601 3.01.896 1.81.846 4.17-.514 6.67z\" />\n          </g>\n        </svg>\n        <span className={cs(styles['bottom-info'])}>\n          {styleNumber(favorite_count)}\n        </span>\n      </div>\n    </div>\n  </Tooltip>\n);\n\nconst shareAction = (\n  <Tooltip title=\"Share\" slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [-25, -14],\n          },\n        },\n      ],\n    },\n  }}>\n    <div className={cs(styles['bottom-button'], styles.blue)}>\n      <div>\n        <svg viewBox='0 0 24 24'>\n          <g>\n            <path d=\"M12 2.59l5.7 5.7-1.41 1.42L13 6.41V16h-2V6.41l-3.3 3.3-1.41-1.42L12 2.59zM21 15l-.02 3.51c0 1.38-1.12 2.49-2.5 2.49H5.5C4.11 21 3 19.88 3 18.5V15h2v3.5c0 .28.22.5.5.5h12.98c.28 0 .5-.22.5-.5L19 15h2z\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  </Tooltip>\n)\n\n\n\nconst BookmarkAction = ({ bookmark_count }) => (\n  <Tooltip title=\"Bookmark\" slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [-20, -14],\n          },\n        },\n      ],\n    },\n  }}>\n    <div className={cs(styles['bottom-button'], styles.blue)}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <svg viewBox='0 0 24 24' style={{ marginRight: '0px' }}>\n          <g>\n            <path d=\"M4 4.5C4 3.12 5.119 2 6.5 2h11C18.881 2 20 3.12 20 4.5v18.44l-8-5.71-8 5.71V4.5zM6.5 4c-.276 0-.5.22-.5.5v14.56l6-4.29 6 4.29V4.5c0-.28-.224-.5-.5-.5h-11z\" />\n          </g>\n        </svg>\n        <span className={cs(styles['bottom-info'])}>\n          {styleNumber(bookmark_count)}\n        </span>\n      </div>\n    </div>\n  </Tooltip>\n);\nexport function Tweet(props) {\n  const { config = {}, className, ...rest } = props\n  const [text, setText] = useState(config.text)\n\n  useEffect(() => {\n    setText(\n      processString([\n        {\n          regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:(?:@|＠)(?!\\/))([a-zA-Z0-9/_]{1,15})(?:\\b(?!@|＠)|$)/,\n          fn: (key, result) => {\n            return (\n              <span key={key}>\n                {' '}\n                <span className={cs(styles.link, styles.mention)}>\n                  @{result[1]}\n                </span>\n              </span>\n            )\n          }\n        },\n        {\n          regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n          fn: (key, result) => {\n            return (\n              <span key={key}>\n                {' '}\n                <span className={cs(styles.link, styles.mention)}>\n                  #{result[1]}\n                </span>\n              </span>\n            )\n          }\n        },\n        // {\n        //   regex: /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/,\n        //   fn: (key, result) => {\n        //     return (\n        //       <Twemoji\n        //         key={key}\n        //         options={{ className: styles['twemoji-bg'] }}\n        //         style={{ display: 'inline' }}\n        //       >\n        //         {result[1]}\n        //       </Twemoji>\n        //     )\n        //   }\n        // },\n        {\n          regex: /(\\bhttps?:\\/\\/\\S+\\b)/g,\n          fn: (key, result) => (\n            <span key={key}>\n              {' '}\n              <span className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n                {result[0]}\n              </span>\n            </span>\n          )\n        },\n        {\n          regex: /(\\bhttp?:\\/\\/\\S+\\b)/g,\n          fn: (key, result) => (\n            <span key={key}>\n              {' '}\n              <span className={cs(styles.link, styles.mention)} target=\"_blank\" rel=\"noopener noreferrer\">\n                {result[0]}\n              </span>\n            </span>\n          )\n        }\n      ])(config.text)\n    )\n  }, [config.text])\n\n  const theme = ['default', 'dim', 'lightsout'].includes(config.theme)\n    ? config.theme\n    : 'default'\n\n  const dateAppDetails = [\n    config.date && renderDate(config.date),\n\n    config.views > 0 && (<span className={cs(styles.link, styles['rt-likes'])}>\n      <strong>{styleNumber(config.views)}</strong> Views\n    </span>)\n  ].filter(Boolean)\n\n  return (\n    <div className={cs(styles.tweet, styles[theme], className)} {...rest}>\n      <div className={styles['user-info']}>\n        <div className={styles['avatar-container']}>\n          <HoverAvatar\n            src={config.user.avatar}\n            alt={config.user.name}\n            userName={config.user.name}\n            userHandle={config.user.nickname}\n            userBio={config.user.bio}\n            followers={config.user.followers}\n            following={config.user.following}\n            verified={config.user.verified}\n            headline={config.user.headline}\n          />\n        </div>\n\n        <div className={styles['user-info-right']}>\n          {/* {dropButtonIcon} */}\n\n          <div className={styles['user-name']}>\n\n            <span className={styles.link}>{config.user.name}</span>\n\n            {config.user.verified && verifiedIcon}\n\n            {config.user.locked && !config.user.verified && lockIcon}\n          </div>\n\n          <div className={styles['user-nickname']}>@{config.user.nickname}</div>\n        </div>\n      </div>\n\n      <div className={styles['tweet-text']}>\n        {text && <div className={styles.txt}>{text}</div>}\n\n        {config.imageUrls && (\n          <ImagePreview imageUrls={config.imageUrls} />\n        )}\n\n\n      </div>\n\n      {dateAppDetails && dateAppDetails.length && (\n        <div className={styles['date-app-details']}>\n          {dateAppDetails.map((d, i) => (\n            <React.Fragment key={i}>\n              {d}\n              {i < dateAppDetails.length - 1 && ' · '}\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n\n\n\n      <div className={styles['bottom-buttons']}>\n\n        {config.comments > 0 && <CommentAction comment_count={config.comments} />}\n        \n\n        {config.retweets > 0 && <RetweetAction retweet_count={config.retweets} />}\n        {config.likes > 0 && <FavoriteAction favorite_count={config.likes} />}\n        {config.bookmarks > 0 && <BookmarkAction bookmark_count={config.bookmarks} />}\n        {shareAction}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Tweet } from './../tweet-card/Tweet';\n\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nfunction TweetLoader() {\n  let [searchParams] = useSearchParams();\n\n  // Initialize state variables for each tweet property\n  const [name, setName] = useState('');\n  const [screenName, setScreenName] = useState('');\n  const [profileImageUrl, setProfileImageUrl] = useState('');\n  const [follower, setFollower] = useState(0);\n  const [following, setFollowing] = useState(0);\n  const [verified, setVerified] = useState(false);\n  const [headline, setHeadline] = useState('');\n  const [commentCount, setCommentCount] = useState(0);\n  const [retweetCount, setRetweetCount] = useState(0);\n  const [favoriteCount, setFavoriteCount] = useState(0);\n  const [text, setText] = useState('');\n  const [viewCount, setViewCount] = useState(0);\n  const [bookmark, setBookmark] = useState(0);\n  const [imageUrls, setImageUrls] = useState([]);\n  const [date, setDate] = useState(0);\n\n  const [warnings, setWarnings] = useState([]);\n\n  \n\n  useEffect(() => {\n\n    let localWarnings = [];\n\n    // Parameters that are expected\n    const expectedParams = ['name', 'handle', 'profileImageUrl', 'follower', 'following', 'verified', 'headline', 'commentCount', 'retweetCount', 'favoriteCount', 'text', 'viewCount', 'bookmark','date'];\n\n    // Check for each expected parameter\n    expectedParams.forEach(param => {\n      if (!searchParams.has(param) || searchParams.get(param) === '') {\n        localWarnings.push(`Missing parameter: ${param}`);\n      }\n    });\n\n\n\n\n    // Parse each query parameter and update state variables\n    setName(searchParams.get('name') || '');\n    setScreenName(searchParams.get('handle') || '');\n    setProfileImageUrl(searchParams.get('profileImageUrl') || '');\n    setFollower(parseInt(searchParams.get('follower') || 0, 10));\n    setFollowing(parseInt(searchParams.get('following') || 0, 10));\n    setVerified(searchParams.get('verified') === 'true');\n    setHeadline(searchParams.get('headline') || '');\n    setCommentCount(parseInt(searchParams.get('commentCount') || 0, 10));\n    setRetweetCount(parseInt(searchParams.get('retweetCount') || 0, 10));\n    setFavoriteCount(parseInt(searchParams.get('favoriteCount') || 0, 10));\n    setText(searchParams.get('text') || '');\n    setDate(searchParams.get('date') || '');\n    setViewCount(parseInt(searchParams.get('viewCount') || 0, 10));\n    setBookmark(parseInt(searchParams.get('bookmark') || 0, 10));\n    setImageUrls(searchParams.get('imageUrls') ? searchParams.get('imageUrls').split(',') : []);\n    setWarnings(localWarnings);\n\n\n}, [searchParams]);\n  return (\n    <>\n    <Stack sx={{ width: '100%', marginBottom: 2 }}>\n        {warnings.map((warning, index) => (\n          <Alert severity=\"warning\" key={index}>{warning}</Alert>\n        ))}\n      </Stack>\n    <Tweet\n      config={{\n        user: {\n          avatar: profileImageUrl,\n          nickname: screenName,\n          name: name,\n          verified: verified,\n          following: following,\n          followers: follower,\n          headline: headline\n        },\n        text: text,\n        app: 'Twitter Web App',\n        retweets: retweetCount,\n        likes: favoriteCount,\n        views: viewCount,\n        comments: commentCount,\n        bookmarks: bookmark,\n        imageUrls: imageUrls,\n        date: new Date(date),\n      }}\n    />\n    </>\n  );\n}\n\nexport default TweetLoader;\n","import React, { useState } from 'react';\nimport { Tweet } from './../tweet-card/Tweet';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Switch from '@mui/material/Switch';\n\nexport default function CustomTweetLoader() {\n    // Set up state for each property of the tweet\n    const [name, setName] = useState('Yakov 🚲🚃🚠🎗️');\n    const [screenName, setScreenName] = useState('transitive_bs');\n    const [profileImageUrl, setProfileImageUrl] = useState('https://pbs.twimg.com/profile_images/1754555939263287296/c4DY9fsD_400x400.jpg');\n    const [follower, setFollower] = useState(322);\n    const [following, setFollowing] = useState(534);\n    const [verified, setVerified] = useState(true);\n    const [headline, setHeadline] = useState(\"Working to end career retaliation against #survivors of sexual violence in Hollywood. Founded by #SilenceBreaker @sarahannmasse. #HireSurvivorsHollywood\");\n    const [commentCount, setCommentCount] = useState(300);\n    const [retweetCount, setRetweetCount] = useState(2517);\n    const [favoriteCount, setFavoriteCount] = useState(16342);\n    const [text, setText] = useState(\"Happy Sunday to the #HireSurvivorsHollywood Community! We've decided to use Sundays to highlight #survivors and #SilenceBreakers and the wonderful work they're doing!\\n\\nToday we're celebrating Amber Heard (#AmberHeard)! https://t.co/rCigkEijIY\");\n    const [viewCount, setViewCount] = useState(5000);\n    const [bookmark, setBookmark] = useState(67897);\n    const [date, setDate] = useState('2020-04-20T16:20:00-0400');\n    const [imageUrlsInput, setImageUrlsInput] = useState([\"https://pbs.twimg.com/media/GH3pdhKacAAQewr?format=jpg&name=medium\"]);\n    const [imageUrls, setImageUrls] = useState(\"https://pbs.twimg.com/media/GH3pdhKacAAQewr?format=jpg&name=medium\");\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newImageUrls = imageUrls.split('\\n').map(url => url.trim()).filter(url => url);\n        setImageUrlsInput(newImageUrls)\n\n        // Normally you would probably update the Tweet component's props with new state here\n        // However, for simplicity, we'll log the state to the console\n        console.log({\n            name,\n            screenName,\n            profileImageUrl,\n            follower,\n            following,\n            verified,\n            headline,\n            commentCount,\n            retweetCount,\n            favoriteCount,\n            text,\n            viewCount,\n            bookmark,\n            imageUrlsInput,\n        });\n    };\n\n    return (\n        <Grid container spacing={2} sx={{ marginTop: 2 }}>\n            {/* Input Form Column */}\n            <Grid item xs={12} md={6}>\n\n                <Box component=\"form\" noValidate autoComplete=\"off\" onSubmit={handleSubmit} sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}>\n                    <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Screen Name\" value={screenName} onChange={(e) => setScreenName(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Profile Image URL\" value={profileImageUrl} onChange={(e) => setProfileImageUrl(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Followers\" value={follower} onChange={(e) => setFollower(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Following\" value={following} onChange={(e) => setFollowing(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Verified\" value={verified} onChange={(e) => setVerified(e.target.value === 'true')} fullWidth margin=\"normal\" />\n                    <Switch\n                        checked={verified}\n                        onChange={(e) => setVerified(e.target.checked)}\n                        name=\"verified\"\n                    />\n                    <TextField label=\"date\" value={date} onChange={(e) => setDate(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Comment Count\" value={commentCount} onChange={(e) => setCommentCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Retweet Count\" value={retweetCount} onChange={(e) => setRetweetCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Favorite Count\" value={favoriteCount} onChange={(e) => setFavoriteCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField label=\"Headline\" value={headline} onChange={(e) => setHeadline(e.target.value)} fullWidth margin=\"normal\" multiline />\n                    <TextField label=\"Tweet Text\" value={text} onChange={(e) => setText(e.target.value)} fullWidth margin=\"normal\" multiline />\n                    <TextField type=\"number\" label=\"View Count\" value={viewCount} onChange={(e) => setViewCount(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField type=\"number\" label=\"Bookmark\" value={bookmark} onChange={(e) => setBookmark(e.target.value)} fullWidth margin=\"normal\" />\n                    <TextField\n                        label=\"Image URLs\"\n                        value={imageUrls}\n                        onChange={(e) => setImageUrls(e.target.value)}\n                        fullWidth\n                        margin=\"normal\"\n                        helperText=\"Enter each URL on a new line.\"\n                        multiline\n                        rows={4}\n                    />\n\n                    <p />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Update Tweet\n                    </Button>\n                </Box>\n            </Grid>\n\n            {/* Tweet Card Column */}\n            <Grid item xs={12} md={6} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'start' }}>\n\n\n                {/* The Tweet component is rendered below with the state passed as props */}\n                <Tweet\n                    config={{\n                        user: {\n                            avatar: profileImageUrl,\n                            nickname: screenName,\n                            name: name,\n                            verified: verified,\n                            following: following,\n                            followers: follower,\n                            headline: headline\n                        },\n                        text: text,\n                        app: 'Twitter Web App',\n                        date: new Date(date), // Assuming you want to keep this static\n                        retweets: retweetCount,\n                        likes: favoriteCount,\n                        views: viewCount,\n                        comments: commentCount,\n                        bookmarks: bookmark,\n                        imageUrls: imageUrlsInput,\n                    }}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport TweetLoader from './pages/TweetLoader'; // Component for loading tweets based on query parameters\nimport CustomTweetLoader from './pages/CustomTweetLoader'; // Component for loading tweets based on user-defined info\n\nconst TweetRouter = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path='/' element={<TweetLoader />} />\n        <Route path='/custom' element={<CustomTweetLoader />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default TweetRouter;\n","import React from 'react';\nimport TweetRouter from './TweetRouter';\n\nfunction App() {\n  return (\n    <div>\n      <TweetRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-grid-container\":\"imageStyle_image-grid-container__2C7Ro\",\"single\":\"imageStyle_single__3FOWN\",\"double\":\"imageStyle_double__28HGx\",\"triple\":\"imageStyle_triple__26ID8\",\"quad\":\"imageStyle_quad__3B4Za\"};"],"sourceRoot":""}